---
# dns related tasks
- name: install bind
  community.general.pacman:
    name: bind
    state: present
  when: network.dns.server

- name: create rndc.key
  command:
    cmd: rndc-confgen -a
    creates: /etc/rndc.key
  when: network.dns.server

- name: set permission for rndc.key
  file:
    path: /etc/rndc.key
    owner: named
    mode: '0644'
  when: network.dns.server

- name: copy rndc.conf
  copy:
    src: rndc.conf
    dest: /etc/rndc.conf
    owner: root
    group: root
    mode: '0644'
  when: network.dns.server

- name: create named.conf
  template:
    src: named.conf.j2
    dest: /etc/named.conf
    mode: '0644'
    validate: 'named-checkconf %s'
  when: network.dns.server

- name: create master zone file
  template:
    src: master.zone.j2
    dest: /var/named/{{ network.dns.master.zone }}.zone
    owner: named
    group: named
    mode: '0644'
    force: no
    validate: "named-checkzone {{ network.dns.master.zone }} %s"
  when:
    - network.dns.server
    - network.dns.master.zone is defined

- name: create master reverse zone file
  template:
    src: master.reverse.zone.j2
    dest: /var/named/{{ network.dns.master.reverse }}.zone
    owner: named
    group: named
    mode: '0644'
    force: no
    validate: "named-checkzone {{ network.dns.master.reverse }} %s"
  when:
    - network.dns.server
    - network.dns.master.reverse is defined

- name: create master directory in /var/named
  file:
    path: /var/named/master
    state: directory
    mode: '0755'
    owner: named
    group: named
  when: network.dns.server

- name: generate ZSK key
  command: dnssec-keygen -a NSEC3RSASHA1 -b 2048 -n zone "{{ network.dns.master.zone }}"
  args:
    chdir: /var/named/master/
  when: network.dns.master.zone is defined

- name: generate KSK key
  command: dnssec-keygen -f KSK -a NSEC3RSASHA1 -b 4096 -n zone "{{ network.dns.master.zone }}"
  args:
    chdir: /var/named/master/
  when: network.dns.master.zone is defined

- name: generate ZSK key for reverse zone
  command: dnssec-keygen -a NSEC3RSASHA1 -b 2048 -n zone "{{ network.dns.master.reverse }}"
  args:
    chdir: /var/named/master/
  when: network.dns.master.reverse is defined

- name: generate KSK key for reverse zone
  command: dnssec-keygen -f KSK -a NSEC3RSASHA1 -b 4096 -n zone "{{ network.dns.master.reverse }}"
  args:
    chdir: /var/named/master/
  when: network.dns.master.reverse is defined

- name: recursively change ownership of /var/named/master
  file:
    path: /var/named/master
    state: directory
    recurse: yes
    owner: named
    group: named

- name: enable and start named
  service:
    name: named
    state: started
    enabled: yes
  when: network.dns.server

- name: install dnscrypt-proxy
  community.general.pacman:
    name: dnscrypt-proxy
    state: present
  when: network.dns.server

- name: install python-urllib3
  community.general.pacman:
    name: python-urllib3
    state: present
    extra_args: --asdeps
  when: network.dns.server

- name: configure dnscrypt-proxy.toml listen address
  lineinfile:
    dest: /etc/dnscrypt-proxy/dnscrypt-proxy.toml
    regexp: '^listen_addresses'
    state: present
    line: "listen_addresses = ['127.0.0.1:53000', '[::1]:53000']"
  when: network.dns.server

- name: configure dnscrypt-proxy.toml dnssec
  lineinfile:
    dest: /etc/dnscrypt-proxy/dnscrypt-proxy.toml
    regexp: '^require_dnssec'
    state: present
    line: "require_dnssec = true"
  when: network.dns.server

- name: configure dnscrypt-proxy.toml log level
  lineinfile:
    dest: /etc/dnscrypt-proxy/dnscrypt-proxy.toml
    regexp: '^# log_level'
    state: present
    line: "log_level = 2"
  when: network.dns.server

- name: enable dnscrypt-proxy
  service:
    name: dnscrypt-proxy
    enabled: yes
  when: network.dns.server

- name: set systemd resolved.conf DNS
  lineinfile:
    dest: /etc/systemd/resolved.conf
    regexp: '^#DNS='
    state: present
    line: 'DNS=127.0.0.1 ::1'
  when: network.dns.server

- name: set systemd resolved.conf fallback DNS
  lineinfile:
    dest: /etc/systemd/resolved.conf
    regexp: '^#FallbackDNS='
    state: present
    line: 'FallbackDNS=1.1.1.1 1.0.0.1'
  when: network.dns.server

- name: set systemd resolved.conf domain
  lineinfile:
    dest: /etc/systemd/resolved.conf
    regexp: '^#Domains='
    state: present
    line: "Domains={{ ansible_domain }}"
  when: network.dns.server

- name: enable and start systemd-resolved
  service:
    name: systemd-resolved
    enabled: yes
    state: restarted
  when: network.dns.server


